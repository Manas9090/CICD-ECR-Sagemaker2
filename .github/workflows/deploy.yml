# Step 8: Deploy or update SageMaker endpoint
- name: Deploy to SageMaker
  env:
    IMAGE_URI: ${{ secrets.ECR_URI }}:${{ env.IMAGE_TAG }}
    SAGEMAKER_ROLE_ARN: ${{ secrets.SAGEMAKER_ROLE_ARN }}
    AWS_REGION: ${{ env.AWS_REGION }}
    SAGEMAKER_MODEL_NAME: ${{ env.SAGEMAKER_MODEL_NAME }}
    SAGEMAKER_ENDPOINT_NAME: ${{ env.SAGEMAKER_ENDPOINT_NAME }}
  run: |
    echo "Deploying image $IMAGE_URI to SageMaker..."
    python - <<PYTHON
import os
import boto3

sm = boto3.client('sagemaker', region_name=os.environ['AWS_REGION'])

model_name = os.environ['SAGEMAKER_MODEL_NAME']
endpoint_name = os.environ['SAGEMAKER_ENDPOINT_NAME']
image_uri = os.environ['IMAGE_URI']
role_arn = os.environ['SAGEMAKER_ROLE_ARN']

# Create or update model
try:
    sm.create_model(
        ModelName=model_name,
        PrimaryContainer={'Image': image_uri, 'Mode': 'SingleModel'},
        ExecutionRoleArn=role_arn
    )
    print("✅ Model created.")
except sm.exceptions.ResourceInUse:
    print("🔁 Model already exists. Skipping creation.")

# Create or update endpoint config
endpoint_config_name = f"{model_name}-config"
try:
    sm.create_endpoint_config(
        EndpointConfigName=endpoint_config_name,
        ProductionVariants=[{
            'VariantName': 'AllTraffic',
            'ModelName': model_name,
            'InitialInstanceCount': 1,
            'InstanceType': 'ml.t2.medium',
        }]
    )
    print("✅ Endpoint config created.")
except sm.exceptions.ResourceInUse:
    print("🔁 Endpoint config already exists. Skipping creation.")

# Create or update endpoint
try:
    sm.create_endpoint(
        EndpointName=endpoint_name,
        EndpointConfigName=endpoint_config_name
    )
    print("🚀 Endpoint creation started.")
except sm.exceptions.ResourceInUse:
    print("🔁 Updating existing endpoint...")
    sm.update_endpoint(
        EndpointName=endpoint_name,
        EndpointConfigName=endpoint_config_name
    )
    print("✅ Endpoint update initiated.")
PYTHON
